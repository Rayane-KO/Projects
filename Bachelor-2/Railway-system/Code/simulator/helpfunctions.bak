#lang racket
(require racket/mpair)

(provide cons
         car
         cdr
         set-car!
         set-cdr!
         map)

(define cons mcons)
(define car mcar)
(define cdr mcdr)
(define set-car! set-mcar!)
(define set-cdr! set-mcdr!)

(define (map f lst)
  (mcons (f (mcar lst)) (map f (mcdr lst))))
